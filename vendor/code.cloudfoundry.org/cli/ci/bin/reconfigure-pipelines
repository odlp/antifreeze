#!/usr/bin/env bash

set -e
set -o pipefail

check_installed() {
  if ! command -v $1 > /dev/null 2>&1; then
    printf "$1 must be installed before running this script!"
    exit 1
  fi
}

configure_pipeline() {
  local name=$1
  local pipeline=$2

  printf "configuring the $name pipeline...\n"

  fly -t ci set-pipeline \
    -p $name \
    -c $pipeline \
    -l <(lpass show "Concourse Credentials" --notes) \
    -v honeycomb-writer-key="$(lpass show Shared-CLI/Honeycomb --notes)"
}

configure_infrastructure_pipeline() {
  local name=$1
  local creds=$2
  local potato=$3

  printf "configuring the $name pipeline...\n"

  fly -t ci set-pipeline \
    -p $name \
    -c $pipelines_path/infrastructure/pipeline.yml \
    -l <(lpass show "Concourse Credentials" --notes) \
    -l <(lpass show "$creds" --notes) \
    -v pool-name=$potato
}

configure_legacy_infrastructure_pipeline() {
  local name=$1
  local creds=$2
  local potato=$3

  printf "configuring the $name pipeline...\n"

  fly -t ci set-pipeline \
    -p $name \
    -c $pipelines_path/infrastructure/legacy-pipeline.yml \
    -l <(lpass show "Concourse Credentials" --notes) \
    -l <(lpass show "$creds" --notes) \
    -v pool-name=$potato
}

configure_bosh_lite_pool_pipeline() {
  local name=$1

  fly -t ci set-pipeline \
    -p $name \
    -c $pipelines_path/cli-dev-bosh-lite/pipeline.yml \
    -v bosh-lite-dns-zone-name=bosh-lite-pool \
    -v bosh-lite-gcp-json-key="$(lpass show Shared-CLI/bosh-service-account-gcp-creds --notes | jq -c . )" \
    -v bosh-lite-pools-github-private-key="$(lpass show Shared-CLI/bosh-lite-pool-github-key --notes)" \
    -v bosh-lite-project-id=cf-cli \
    -v bosh-lite-region=us-west1 \
    -v bosh-lite-storage-bucket=bosh-lites \
    -v bosh-lite-system-domain-suffix=lite.cli.fun \
    -v git-email=cf-cli-eng@pivotal.io \
    -v git-username=cf-cli-eng \
    -v env-pool-repo=git@github.com:cloudfoundry/cli-pools.git
}

check_installed lpass
check_installed fly

# Make sure we're up to date and that we're logged in.
lpass sync

pipelines_path=$(cd $(dirname $0)/.. && pwd)

configure_pipeline cli $pipelines_path/cli/pipeline.yml

configure_infrastructure_pipeline inf-beque beque-pipeline baked-potato
configure_infrastructure_pipeline inf-hardknox hardknox-pipeline baked-potato
configure_infrastructure_pipeline inf-lovingcup lovingcup-pipeline baked-potato
configure_infrastructure_pipeline inf-tartine tartine-pipeline baked-potato
configure_infrastructure_pipeline inf-arsicault arsicault-pipeline deep-fried-potato

configure_legacy_infrastructure_pipeline inf-homeroom homeroom-pipeline moldy-gnocchi

configure_bosh_lite_pool_pipeline bosh-lites
