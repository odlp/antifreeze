---
groups:
- name: create
  jobs:
  - deploy
- name: delete
  jobs:
  - delete-cf
  - delete-infrastructure

resources:
- name: cf-deployment-concourse-tasks
  type: git
  source:
    uri: https://github.com/cloudfoundry/cf-deployment-concourse-tasks
    tag_filter: v6.*
- name: cli-ci
  type: git
  source:
    uri: https://github.com/cloudfoundry/cli
    branch: master
    path: ci
- name: state
  type: git
  source:
    uri: git@github.com:cloudfoundry/cli-private
    private_key: ((cli-private-github-private-key))
    branch: master
    paths:
    - ci/infrastructure/((stack-name))/bbl-state.json
- name: cf-state
  type: git
  source:
    uri: git@github.com:cloudfoundry/cli-private
    private_key: ((cli-private-github-private-key))
    branch: master
    paths:
    - ci/infrastructure/((stack-name))/deployment-vars.yml
- name: gcp-bosh-pool
  type: pool
  source:
    uri: git@github.com:cloudfoundry/cli-pools
    private_key: ((cli-pools-github-private-key))
    branch: master
    pool: ((pool-name))

jobs:
- name: deploy
  serial_groups: [((stack-name))]
  build_logs_to_retain: 100
  plan:
  - aggregate:
    - get: cf-deployment-concourse-tasks
    - get: state
    - put: gcp-bosh-pool
      params:
        claim: ((stack-name)).cli.fun
    - get: cli-ci
    - get: cf-state
  - task: setup-infrastructure
    file: cf-deployment-concourse-tasks/bbl-up/task.yml
    input_mapping:
      bbl-config: state
      bbl-state: state
    params:
      BBL_IAAS: gcp
      BBL_GCP_SERVICE_ACCOUNT_KEY: ((google-account-creds))
      BBL_GCP_PROJECT_ID: ((gcp-project))
      BBL_GCP_REGION: us-central1
      BBL_GCP_ZONE: us-central1-f
      BBL_LB_CERT: ((ssl-cert))
      BBL_LB_KEY: ((ssl-cert-private-key))
      LB_DOMAIN: ((stack-name)).cli.fun
      BBL_ENV_NAME: ((stack-name))
      BBL_STATE_DIR: ci/infrastructure/((stack-name))
  - task: deploy-legacy-cf
    file: cli-ci/ci/infrastructure/tasks/deploy-legacy-cf.yml
    input_mapping:
      bbl-state: state
      vars-store: cf-state
    params:
      SYSTEM_DOMAIN: ((stack-name)).cli.fun
      VARS_STORE_FILE: ci/infrastructure/((stack-name))/deployment-vars.yml
      BBL_STATE_DIR: ci/infrastructure/((stack-name))
      CLIENT_SECRET: ((client-secret))
  - task: bosh-cleanup
    file: cf-deployment-concourse-tasks/bosh-cleanup/task.yml
    input_mapping:
      bbl-state: state
    params:
      BBL_STATE_DIR: ci/infrastructure/((stack-name))
      CLEAN_ALL: true
  ensure:
    aggregate:
      - put: state
        params:
          repository: updated-bbl-state
          rebase: true
      - put: cf-state
        params:
          repository: updated-vars-store
          rebase: true
      - put: gcp-bosh-pool
        params:
          release: gcp-bosh-pool

- name: delete-cf
  serial_groups: [((stack-name))]
  build_logs_to_retain: 100
  plan:
  - aggregate:
    - get: cf-deployment-concourse-tasks
    - get: state
  - task: delete-cf-deployment
    file: cf-deployment-concourse-tasks/bosh-delete-deployment/task.yml
    input_mapping:
      bbl-state: state
    params:
      BBL_STATE_DIR: ci/infrastructure/((stack-name))

- name: delete-infrastructure
  serial_groups: [((stack-name))]
  build_logs_to_retain: 100
  plan:
  - aggregate:
    - get: cf-deployment-concourse-tasks
    - get: state
  - task: bosh-cleanup
    file: cf-deployment-concourse-tasks/bosh-cleanup/task.yml
    input_mapping:
      bbl-state: state
    params:
      BBL_STATE_DIR: ci/infrastructure/((stack-name))
      CLEAN_ALL: true
  - task: destroy-infrastructure
    file: cf-deployment-concourse-tasks/bbl-destroy/task.yml
    input_mapping:
      bbl-state: state
    params:
      BBL_STATE_DIR: ci/infrastructure/((stack-name))
      BBL_GCP_SERVICE_ACCOUNT_KEY: ((google-account-creds))
    ensure:
      put: state
      params:
        repository: updated-bbl-state
        rebase: true
