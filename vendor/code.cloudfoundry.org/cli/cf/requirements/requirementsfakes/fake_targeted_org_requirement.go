// This file was generated by counterfeiter
package requirementsfakes

import (
	"sync"

	"code.cloudfoundry.org/cli/cf/models"
	"code.cloudfoundry.org/cli/cf/requirements"
)

type FakeTargetedOrgRequirement struct {
	ExecuteStub        func() error
	executeMutex       sync.RWMutex
	executeArgsForCall []struct{}
	executeReturns     struct {
		result1 error
	}
	GetOrganizationFieldsStub        func() models.OrganizationFields
	getOrganizationFieldsMutex       sync.RWMutex
	getOrganizationFieldsArgsForCall []struct{}
	getOrganizationFieldsReturns     struct {
		result1 models.OrganizationFields
	}
	invocations      map[string][][]interface{}
	invocationsMutex sync.RWMutex
}

func (fake *FakeTargetedOrgRequirement) Execute() error {
	fake.executeMutex.Lock()
	fake.executeArgsForCall = append(fake.executeArgsForCall, struct{}{})
	fake.recordInvocation("Execute", []interface{}{})
	fake.executeMutex.Unlock()
	if fake.ExecuteStub != nil {
		return fake.ExecuteStub()
	} else {
		return fake.executeReturns.result1
	}
}

func (fake *FakeTargetedOrgRequirement) ExecuteCallCount() int {
	fake.executeMutex.RLock()
	defer fake.executeMutex.RUnlock()
	return len(fake.executeArgsForCall)
}

func (fake *FakeTargetedOrgRequirement) ExecuteReturns(result1 error) {
	fake.ExecuteStub = nil
	fake.executeReturns = struct {
		result1 error
	}{result1}
}

func (fake *FakeTargetedOrgRequirement) GetOrganizationFields() models.OrganizationFields {
	fake.getOrganizationFieldsMutex.Lock()
	fake.getOrganizationFieldsArgsForCall = append(fake.getOrganizationFieldsArgsForCall, struct{}{})
	fake.recordInvocation("GetOrganizationFields", []interface{}{})
	fake.getOrganizationFieldsMutex.Unlock()
	if fake.GetOrganizationFieldsStub != nil {
		return fake.GetOrganizationFieldsStub()
	} else {
		return fake.getOrganizationFieldsReturns.result1
	}
}

func (fake *FakeTargetedOrgRequirement) GetOrganizationFieldsCallCount() int {
	fake.getOrganizationFieldsMutex.RLock()
	defer fake.getOrganizationFieldsMutex.RUnlock()
	return len(fake.getOrganizationFieldsArgsForCall)
}

func (fake *FakeTargetedOrgRequirement) GetOrganizationFieldsReturns(result1 models.OrganizationFields) {
	fake.GetOrganizationFieldsStub = nil
	fake.getOrganizationFieldsReturns = struct {
		result1 models.OrganizationFields
	}{result1}
}

func (fake *FakeTargetedOrgRequirement) Invocations() map[string][][]interface{} {
	fake.invocationsMutex.RLock()
	defer fake.invocationsMutex.RUnlock()
	fake.executeMutex.RLock()
	defer fake.executeMutex.RUnlock()
	fake.getOrganizationFieldsMutex.RLock()
	defer fake.getOrganizationFieldsMutex.RUnlock()
	return fake.invocations
}

func (fake *FakeTargetedOrgRequirement) recordInvocation(key string, args []interface{}) {
	fake.invocationsMutex.Lock()
	defer fake.invocationsMutex.Unlock()
	if fake.invocations == nil {
		fake.invocations = map[string][][]interface{}{}
	}
	if fake.invocations[key] == nil {
		fake.invocations[key] = [][]interface{}{}
	}
	fake.invocations[key] = append(fake.invocations[key], args)
}

var _ requirements.TargetedOrgRequirement = new(FakeTargetedOrgRequirement)
